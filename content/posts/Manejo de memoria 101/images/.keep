---
title: "Manejo de memoria 101"
date: 2023-12-28T15:33:31-03:00
draft: false
author: Andrés Reyes, el Programador Pobre
year: "2023"
month: "2023/12"
categories:
- golang
- programación
- memoria
tags:
- aprendizaje
- memoria
keywords:
- memoria
disableComments: false
---

{{<postimage "images/puzzle.jpg" "Fugas. imagen de dominio público gentileza piqsels. https://www.piqsels.com/en/public-domain-photo-smyfi">}}

Que Go tiene un recolector de basura integrado lo hemos escuchado muchas veces. Significa que no tenemos que preocuparnos de liberar la memoria que nuestra aplicación usa, pero ¿Deberiamos entender el ciclo de uso de memoria de nuestras aplicaciones? ¿El recolector de basura nos da derecho a olvidar y usar y abusar de ese recurso? Y, primero que nada ¿Que diablos es la memoria de la que tanto se habla?

## Memoria virtual

Aquellos que ya tengan la escritura de algunos programas a su haber saben que cuando declaramos una variable, lo que estamos haciendo es asignar un identificador a una dirección de memoria en la que guardaremos datos (si nunca ha declarado una variable, hagase un favor y vaya al [tour de go](https://go.dev/tour/basics/8)).


Mas o menos cuando hablamos de memoria todos pensamos en una grilla homogenea, con direcciones para acceder a cada casilla comodamente.

![memory](images/stack_go.png)

Pues bien, esa dirección de memoria no salió del aire por generación espontanea, existe físicamente de alguna forma en alguna parte.

En realidad, lo que llamamos memoria es una **abstracción** proporcionada por el sistema operativo, la cual oculta diferentes medios de almacenamiento.

* [Los registros del procesador](https://es.wikipedia.org/wiki/Registro_(hardware))

* [La caché del procesador](https://es.wikipedia.org/wiki/Cach%C3%A9_de_CPU)

* Ram

* Archivos en disco

* Etc.

Esta abstracción, es lo que llamamos **memoria virtual**, es administrada por el sistema operativo y *es un recurso* el cual debe ser solicitado.

---
Memoria virtual es una abstracción que provee a cada proceso la ilusión de que tiene uso exclusivo sobre la memoria principal.
---
*Bryant, R. E. & O’Hallaron, D. R. (2016). Computer System: A Programmer’s Perspective (Third global edition). Pearson Education Limited.*




